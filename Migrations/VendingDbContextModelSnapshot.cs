// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Vending.Migrations
{
    [DbContext(typeof(VendingDbContext))]
    partial class VendingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vending.Models.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Coca-Cola"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pepsi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fanta"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sprite"
                        });
                });

            modelBuilder.Entity("Vending.Models.Entities.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Denomination")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Coins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Denomination = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            Denomination = 2,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            Denomination = 5,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 4,
                            Denomination = 10,
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("Vending.Models.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Vending.Models.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Vending.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "Coca-Cola Classic",
                            Price = 50m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            Name = "Coca-Cola Zero",
                            Price = 50m,
                            Stock = 8
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            Name = "Pepsi Max",
                            Price = 45m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            Name = "Pepsi Wild Cherry",
                            Price = 45m,
                            Stock = 6
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            Name = "Fanta Orange",
                            Price = 40m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 3,
                            Name = "Fanta Grape",
                            Price = 40m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 4,
                            Name = "Sprite",
                            Price = 40m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 4,
                            Name = "Sprite No Sugar",
                            Price = 40m,
                            Stock = 18
                        });
                });

            modelBuilder.Entity("Vending.Models.Entities.OrderItem", b =>
                {
                    b.HasOne("Vending.Models.Entities.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vending.Models.Entities.Product", b =>
                {
                    b.HasOne("Vending.Models.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Vending.Models.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Vending.Models.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
